class Solution {
public:
    void solve(vector<vector<char>>& board) {
        
        if(board.size()==0 || board[0].size()==0) return;
        
        int rows=board.size();
        int col = board[0].size();
        
        for(int i=0; i<rows; i++){
            if(board[i][0] == 'O') callDFS(board,i,0);
            if(board[i][col-1] == 'O') callDFS(board,i,col-1);
        }
        
        for(int i=0; i<col; i++){
            if(board[0][i] == 'O') callDFS(board,0,i);
            if(board[rows-1][i] == 'O') callDFS(board,rows-1,i);
        }
        
        for(int i=0; i<rows; i++){
            for(int j=0;j<col; j++){
                if(board[i][j] == 'O') board[i][j] = 'X';
                else if(board[i][j] == '*') board[i][j] = 'O';
            }
        }
    }
    
    void callDFS(vector<vector<char>>& board, int i, int j){
        if(i>board.size() || i<0 || j<0 || j>board[0].size())
            return;
        if(board[i][j] == 'O') board[i][j]='*';
        
        if(i>0 && board[i-1][j] == 'O')
            callDFS(board,i-1,j);
        
        
        if(i<board.size()-1 && board[i+1][j] == 'O')
            callDFS(board,i+1,j);
        
        if(j>0 && board[i][j-1] == 'O')
            callDFS(board,i,j-1);
        
        
        if(j<board[0].size()-1 && board[i][j+1] == 'O')
            callDFS(board,i,j+1);
        
        return;
        
    }
};
